import React, { useState } from "react";

const SupportForm = () => {
    const [subject, setSubject] = useState("");
    const [message, setMessage] = useState("");

    const name = localStorage.getItem('nicknameUser');
    const emailUser = localStorage.getItem('emailUser');


    const handleSubmit = async (e) => {
        e.preventDefault();


        const botToken = process.env.REACT_APP_TELEGRAM_BOT_TOKEN;
        const chatId = process.env.REACT_APP_TELEGRAM_CHAT_ID;

        const telegramMessage = `
üì© *–ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É*:
- üìù *–¢–µ–º–∞:* ${subject}
- üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* ${message}
-  *–ü–æ—á—Ç–∞ —é–∑–µ—Ä–∞:* ${emailUser}
-  *–ù–∏–∫ —é–∑–µ—Ä–∞:* ${name}
        `;

        try {
            const response = await fetch(
                `https://api.telegram.org/bot${botToken}/sendMessage`,
                {
                    method: "POST",
                    headers: { "Content-Type": "application/json", 'ngrok-skip-browser-warning': 'true', },
                    body: JSON.stringify({
                        chat_id: chatId,
                        text: telegramMessage,
                        parse_mode: "Markdown",
                    }),
                }
            );

            if (response.ok) {
                alert("–û–±—Ä–∞—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
                setSubject("");
                setMessage("");
            } else {
                alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±—Ä–∞—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", error);
            alert("–°–±–æ–π –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.");
        }
    };

    return (
        <div style={{ padding: "24px", fontFamily: "Arial, sans-serif", color: "#111", marginTop: -40 }}>
            <h2 style={{ fontSize: "20px", fontWeight: "bold", marginBottom: "16px" }}>
                –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
            </h2>

            <div
                style={{
                    border: "1px solid #000",
                    padding: "16px",
                    marginBottom: "24px",
                    backgroundColor: "#fefefe",
                }}
            >
                <p style={{ fontSize: "14px", lineHeight: "1.6", color: "#222", textAlign: "center" }}>
                    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã! –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ–±–ª–µ–º—ã, –∏–¥–µ–∏ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è,
                    –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ,
                    —É–∫–∞–∑–∞–≤ —Ç–µ–º—É –æ–±—Ä–∞—â–µ–Ω–∏—è, –∏ –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é –≤ –ø–æ–ª–µ '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'!
                    –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–º–æ—á—å –≤–∞–º –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏!
                </p>
            </div>

            <form
                onSubmit={handleSubmit}
                style={{
                    backgroundColor: "#fff",
                    boxShadow: "0 2px 8px rgba(0, 0, 0, 0.05)",
                    padding: "24px",
                    maxWidth: "100%",
                }}
            >
                <div style={{ marginBottom: "16px" }}>
                    <label
                        htmlFor="subject"
                        style={{ display: "block", marginBottom: "8px", fontSize: "14px", fontWeight: "600" }}
                    >
                        –¢–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è
                    </label>
                    <input
                        id="subject"
                        type="text"
                        value={subject}
                        onChange={(e) => setSubject(e.target.value)}
                        style={{
                            width: "90%",
                            padding: "12px",
                            borderRadius: "4px",
                            border: "1px solid #ccc",
                            fontSize: "14px",
                        }}
                        required
                    />
                </div>

                <div style={{ marginBottom: "24px" }}>
                    <label
                        htmlFor="message"
                        style={{ display: "block", marginBottom: "8px", fontSize: "14px", fontWeight: "600" }}
                    >
                        –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    </label>
                    <textarea
                        id="message"
                        rows="4"
                        value={message}
                        onChange={(e) => setMessage(e.target.value)}
                        style={{
                            width: "90%",
                            padding: "12px",
                            borderRadius: "4px",
                            border: "1px solid #ccc",
                            fontSize: "14px",
                            resize: "vertical",
                        }}
                        required
                    />
                </div>

                <button
                    type="submit"
                    style={{
                        backgroundColor: "#f4a524",
                        border: "none",
                        padding: "10px 24px",
                        borderRadius: "4px",
                        color: "#000",
                        fontWeight: "bold",
                        fontSize: "14px",
                        cursor: "pointer",
                    }}
                >
                    –°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ
                </button>
            </form>
        </div>
    );
};

export default SupportForm;
